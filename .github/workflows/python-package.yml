# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7]

    steps:       
    
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest
    
    - name: Build with pyinstaller
      run: |
        pip install PyInstaller
        
        echo runner.os
        
        if ([ ${{ runner.os }} == Linux }) ; then
          pyinstaller -F katana.py --hidden-import plyer.platforms.linux.notificatio
          
        elif ([ ${{ runner.os }} == Windows }) ; then
          pyinstaller -F katana.py --hidden-import plyer.platforms.win.notificatio
          
        elif ([ ${{ runner.os }} == macOS }) ; then
          pyinstaller -F katana.py --hidden-import plyer.platforms.macosx.notificatio
          
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}
        path: dist/katana*
